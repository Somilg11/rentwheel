generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  firstName          String
  lastName           String
  email              String    @unique
  password           String
  dateOfBirth        DateTime
  gender             Gender    // Enum for gender
  drivingLicenseImage String?  // Image for driving license
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  bookings           Booking[] // Relation to bookings
}

model Admin {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String    @unique
  password     String
  dateOfBirth  DateTime
  gender       Gender
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Booking {
    id             Int      @id @default(autoincrement())
    pickupLocation String
    dropLocation   String
    pickupDateTime DateTime
    dropDateTime   DateTime
    vehicleId      Int      // Foreign key to Vehicle model
    vehicle        Vehicle   @relation(fields: [vehicleId], references: [id])
    userId         Int      // Foreign key to User model
    user           User      @relation(fields: [userId], references: [id])
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
}


model Vehicle {
  id           Int      @id @default(autoincrement())
  name         String   // Vehicle name
  image        String   // Image of the car
  seats        Int      // Number of seats
  pricePerDay  Float    // Rental price per day
  fuelType     FuelType // Enum for fuel type
  transmission Transmission // Enum for transmission type
  condition    Condition // Enum for car condition
  bookings     Booking[] // Relation to Booking model
  status       CarStatus   // New field for status (available, rented, maintenance)
  type         VehicleType
}

model Subscriber {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  status         SubscriptionStatus // Enum for subscriber status
  subscribedDate DateTime  @default(now())
}

model Order {
  id             Int       @id @default(autoincrement())
  customerName   String
  vehicleName    String
  startDate      DateTime
  endDate        DateTime
  totalAmount    Float
  status         OrderStatus // Enum for order status
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

// Enums

enum Gender {
  Male
  Female
  Others
}

enum FuelType {
  Petrol
  Diesel
  Electric
  Hybrid
}

enum Transmission {
  AUTO
  MANUAL
}

enum Condition {
  Excellent
  Good
}

enum SubscriptionStatus {
  active
  unsubscribed
}

enum OrderStatus {
  pending
  active
  completed
  cancelled
}

enum CarStatus {
  Available
  Rented
  Maintenance
}

enum VehicleType {
  SUV
  Sedan
  Truck
  Coupe
  Convertible
  Hatchback
  Minivan
  Other
}
