generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  // or your preferred database
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  firstName          String
  lastName           String
  email              String    @unique
  password           String
  dateOfBirth        DateTime
  gender             Gender    // Consider using an enum for gender if needed
  drivingLicenseImage String  // Optional image format for driving license
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  bookings           Booking[] // Relationship to bookings
}

model Admin {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String    @unique
  password     String
  dateOfBirth  DateTime
  gender       String    // Consider using an enum for gender if needed
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Booking {
  id             Int      @id @default(autoincrement())
  pickupLocation String
  dropLocation   String
  pickupDateTime DateTime
  dropDateTime   DateTime
  carTypeId      Int      // Foreign key to CarType model
  carType        CarType   @relation(fields: [carTypeId], references: [id]) // Define relation to CarType
  userId         Int      // Foreign key to User model
  user           User      @relation(fields: [userId], references: [id])    // Define relation to User
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model CarType {
  id           Int      @id @default(autoincrement())
  brand        String
  model        String    // Model field name instead of modelName
  seatCapacity Int
  transmission String
  bookings     Booking[]
}


enum Transmission {
  AUTO
  MANUAL
}

enum Gender {
  Male
  Female
  Others
}
